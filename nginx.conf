events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr=$upstream_addr';

    access_log /var/log/nginx/access.log main;

    upstream nodejs_backend {
        server node1:3000;
        server node2:3000;
        server node3:3000;
    }

    # Cache ayarları
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 80;
        
        # Güvenlik başlıkları
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self';";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

        location / {
            proxy_pass http://nodejs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket desteği için
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;

            # X-Powered-By başlığını gizle
            proxy_hide_header X-Powered-By;
        }

        location /media/ {
            proxy_cache my_cache;
            proxy_cache_valid 200 15m;
            expires 15m;
            add_header Cache-Control "public";
        }

        location /static/ {
            proxy_cache my_cache;
            proxy_cache_valid 200 15m;
            expires 15m;
            add_header Cache-Control "public";
        }
    }
} 